getwd()
install.packages(tydiverse)
install.packages(tidyverse)
install.packages('tidyverse')
install.packages('tidyverse')
getwd()
install.packages('tidyverse')
install.packages('tidyverse')
install.packages('tidyverse')
library(tidyverse)
library('tidyverse'')
library('tidyverse'')
library('tidyverse')
install.packages('tidyverse')
install.packages("tidyverse")
install.packages("dplyr")
install.packages(‘magrittr’)
install.packages("magrittr")
updateR()
install.packages("installr")
library(installer)
library(installr)
updateR()
install.packages("tidyverse")
library(tidyverse)
library(magrittr)
library(tidyverse)
install.packages("vctrs")
library(tidyverse)
round(2.5)
2.5 %>% round()
setwd( "C:/Users/amuta/Documents/R/R_studies/R_for_Datascience")
getwd()
select(flights, year, month, day)
#本章で必要なパッケージ
library(nycflights13)
library(tidyverse)
select(flights, year, month, day)
select(flights, year:day)
select(flights, -(year:day))
rename(flights, tail_num = tailnum)
select(flights, tail_num)
rename(flights, tail_num = tailnum)
rename(flights, tail_num = tailnum) %>%
select(tail_num)
select(flights, time_hour, air_time, everything())
#練習問題
#1
select(flights, dep_time, dep_delay, arr_time, arr_delay)
select(flights, starts_with(dep), starts_with(arr))
select(flights, starts_with("dep"), starts_with("arr"))
select(flights, contains("dep"), contains("arr"))
select(flights, contains("dep"), contains("arr"), -(contains("sched"))
c
select(flights, contains("dep"), contains("arr"), -(contains("sched")))
select(flights, contains("dep"), contains("arr"), -(contains("sched")), -carrier)
#2
select(flights, dep_time, dep_time)
#3
?one_of()
?flights
#3
?one_of()
select(flights, year)
select(flights, "year")
select(flights, "year")
select(flights, "year", "month")
col_name <- c("year")
select(flights, col_name)
col_name <- c("year", "month")
select(flights, col_name)
select(flights, one_of(col_name))
#4
select(flights, contains("TIME"))
mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance/air_time*60
)
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
mutate(flights_sml,
gain = arr_delay - dep_delay,
speed = distance/air_time*60
)
mutate(flights_sml,
gain = arr_delay - dep_delay,
hours = air_time / 60,
gain_per_hour = gain / hours
)
mutate(flights_sml,
gain = arr_delay - dep_delay,
hours = air_time / 60,
gain_per_hour = gain / hours
)
transmute(flights,
gain = arr_delay - dep_delay,
hours = arr_delay / 60,
gain_per_hours = gain / hours
)
#3.5.1
transmute(flights,
dep_time,
hours = dep_time %/% 100,
minute = dep_time %% 100,
)
y <- c(1, 2, 2, NA, 3, 4)
min_rank(y)
min_rank(desc(y))
#練習問題
#1
select(flights, dep_time)
#練習問題
#1
select(flights, dep_time, sched_dep_time)
#練習問題
#1
select(flights, desc(dep_time), sched_dep_time)
#練習問題
#1
select(flights, Desc(dep_time), sched_dep_time)
#練習問題
#1
select(flights, dep_time, sched_dep_time)
#練習問題
#1
select(flights, desc(dep_time), sched_dep_time)
#練習問題
#1
select(flights, dep_time > 2300, sched_dep_time)
transmute(flights,
dep_time_minute =
(dep_time %/% 100) * 60 + (dep_time %% 100),
sched_dep_time_minute =
(sched_dep_time %/% 100) * 60 + (sched_dep_time %% 100)
)
#2
transmute(flights,
air_time,
arr_time - dep_time)
#2
trans_to_minute <- function(time) {
return (time %/% 100) * 60 + (time %% 100)
}
transmute(flights,
air_time,
trans_to_minute(arr_time) - trans_to_minute(dep_time)
)
transmute(flights,
air_time,
trans_to_minute(arr_time),
trans_to_minute(dep_time)
)
trans_to_minute(500)
#2
trans_to_minute <- function(time) {
return((time %/% 100) * 60 + (time %% 100))
}
trans_to_minute(500)
trans_to_minute(518)
transmute(flights,
air_time,
trans_to_minute(arr_time),
trans_to_minute(dep_time)
)
transmute(flights,
air_time,
cal_air_time = trans_to_minute(arr_time) - trans_to_minute(dep_time)
)
#5
1:3 + 1:10
